services:
  db:
    image: postgres:15
    container_name: piwheels-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - .:/app
      - ./docker/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro
      - ./docker/db-config/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./docker/db-config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - db_data:/var/lib/postgresql/data
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  initdb:
    container_name: piwheels-initdb
    build:
      context: .
      target: bookworm-piwheels-user
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/piwheels
    command: piw-initdb -d postgresql://postgres:postgres@db:5432/piwheels -y
    restart: no
    volumes:
      - .:/app

  master:
    container_name: piwheels-master
    build:
      context: .
      target: piwheels-master
    depends_on:
      db:
        condition: service_healthy
      initdb:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: postgresql://piwheels:piwheels@db:5432/piwheels
      PYTHONWARNINGS: ignore 
    command: sh -c "chown -R piwheels:piwheels /home/piwheels/www && su piwheels -c 'piw-master -v -o /home/piwheels/www -d postgresql://piwheels:piwheels@db:5432/piwheels'"
    user: root
    volumes:
      - www_data:/home/piwheels/www
      - .:/app

  web:
    container_name: piwheels-web
    build:
      context: .
      target: piwheels-web
    volumes:
      - www_data:/var/www/html
      - .:/app
    ports:
      - 8080:80

  test-bookworm:
    container_name: piwheels-test-bookworm
    build:
      context: .
      target: test-bookworm
    environment:
      PIWHEELS_TESTDB: piwtest
      PIWHEELS_HOST: db:5432
      PIWHEELS_USER: piwheels
      PIWHEELS_PASS: piwheels
      PIWHEELS_SUPERUSER: piwsuper
      PIWHEELS_SUPERPASS: foobar
      SQLALCHEMY_SILENCE_UBER_WARNING: 1
      PYTHONWARNINGS: ignore
      COVERAGE_FILE: /tmp/.coverage
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: pytest -vv

  test-bullseye:
    container_name: piwheels-test-bullseye
    build:
      context: .
      target: test-bullseye
    environment:
      PIWHEELS_TESTDB: piwtest
      PIWHEELS_HOST: db:5432
      PIWHEELS_USER: piwheels
      PIWHEELS_PASS: piwheels
      PIWHEELS_SUPERUSER: piwsuper
      PIWHEELS_SUPERPASS: foobar
      SQLALCHEMY_SILENCE_UBER_WARNING: 1
      PYTHONWARNINGS: ignore
      COVERAGE_FILE: /tmp/.coverage
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: pytest-3 -vv

  test-trixie:
    container_name: piwheels-test-trixie
    build:
      context: .
      target: test-trixie
    environment:
      PIWHEELS_TESTDB: piwtest
      PIWHEELS_HOST: db:5432
      PIWHEELS_USER: piwheels
      PIWHEELS_PASS: piwheels
      PIWHEELS_SUPERUSER: piwsuper
      PIWHEELS_SUPERPASS: foobar
      SQLALCHEMY_SILENCE_UBER_WARNING: 1
      PYTHONWARNINGS: ignore
      COVERAGE_FILE: /tmp/.coverage
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: pytest-3 -vv

  docs:
    container_name: piwheels-docs
    build:
      context: .
      target: piwheels-docs
    volumes:
      - .:/app
    command: sh -c "make -C docs html && python3 -m http.server 80 -d build/html"
    ports:
      - 8081:80

volumes:
  db_data:
  www_data: